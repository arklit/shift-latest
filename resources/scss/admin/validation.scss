$success-border: 1px solid green!important;
$error-border: 1px solid red!important;
$default-border: 1px solid rgba(21, 20, 26, .1)!important;
$unset: unset!important;
$border-radius: 10px!important;

@mixin reset($border) {
    background-image: $unset;
    background-position: $unset;
    background-repeat: $unset;
    background-size: $unset;
    border: $border;
    padding-right: $unset;
}

@mixin inputReset() {
    min-height: $unset;
    width: 1px;
    height: 1px;
    border: none;
    position: absolute;
    opacity: 0;
}

.form-control:focus{

}

.was-validated {
    .form-control {
        &:valid {
            @include reset($success-border);

            &:focus {
                border: $success-border;
                box-shadow: none;
            }
            +.ts-wrapper {
                border: $success-border;
                &.single {
                    background-image: $unset;
                }
                &:not(.single) {
                    background-image: $unset;
                }
            }
        }

        &:invalid {
            @include reset($error-border);

            &:focus {
                border: $error-border;
                box-shadow: none;
            }

            +.ts-wrapper {
                border: $error-border;
                &.single {
                    background-image: $unset;
                }
                &:not(.single) {
                    background-image: $unset;
                }
            }
        }

        &:not([required]) {
            &:valid,
            &:invalid {
                border: $default-border;
                +.ts-wrapper {
                    border: $default-border;
                }
            }
        }
    }
}

.validation-error {
    border: $error-border;

    .rounded {
        border-radius: $border-radius;
    }
}

.validation-success {
    border: $success-border;

    .rounded {
        border-radius: $border-radius;
    }
}
.uploader-data{
    @include inputReset();
}
.mce-container {
    display: flex;
    .tinymce {
        display: block !important;
        @include inputReset();
    }
}

//trash
//@keyframes fadeIn {
//    from {
//        opacity: 0;
//    }
//    to {
//        opacity: 1;
//    }
//}
//
//@keyframes fadeOut {
//    from {
//        opacity: 1;
//    }
//    to {
//        opacity: 0;
//    }
//}
//
//#toast,
//.toast {
//    display: none!important;
//}
//
//.toastify{
//    z-index: 9999;
//    position: fixed;
//    right: 0;
//}
//
//.custom-toast {
//    position: fixed;
//    top: 15px;
//    width: 300px;
//    right: 20px;
//    padding: 10px;
//    background-color: #333;
//    color: #fff;
//    border-radius: 5px;
//    animation: fadeIn 0.5s ease forwards;
//}
//
//.custom-toast.closed {
//    animation: fadeOut 0.5s ease forwards;
//}
//
//.custom-toast-text {
//    display: flex;
//    color: #000;
//    white-space: pre-line;
//}
//
