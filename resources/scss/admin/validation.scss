$success-border: 1px dashed green;
$error-border: 1px dashed red;
$default-border: 1px solid rgba(21, 20, 26, .1);
$unset: unset!important;
$border-radius: 10px;

@mixin reset($border) {
    background-image: $unset;
    background-position: $unset;
    background-repeat: $unset;
    background-size: $unset;
    border: $border;
    padding-right: $unset;
}

.was-validated {
    .form-control {
        &:not([required]) {
            &:valid,
            &:invalid {
                border: $default-border;
                +.ts-wrapper {
                    border: $default-border;
                }
            }
        }

        &:valid {
            @include reset($success-border);

            &:focus {
                border: $success-border;
                box-shadow: none;
            }
            +.ts-wrapper {
                border: $success-border;
                &.single {
                    background-image: $unset;
                }
                &:not(.single) {
                    background-image: $unset;
                }
            }
        }

        &:invalid {
            @include reset($error-border);

            &:focus {
                border: $error-border;
                box-shadow: none;
            }

            +.ts-wrapper {
                border: $error-border;
                &.single {
                    background-image: $unset;
                }
                &:not(.single) {
                    background-image: $unset;
                }
            }
        }
    }
}

.validation-error {
    border: $error-border;

    .rounded {
        border-radius: $border-radius;
    }
}

.validation-success {
    border: $success-border;

    .rounded {
        border-radius: $border-radius;
    }
}

.mce-container {
    display: flex;
    .tinymce {
        display: block !important;
        min-height: $unset;
        width: 1px;
        height: 1px;
        border: none;
        position: absolute;
        opacity: 0;

    }
}

